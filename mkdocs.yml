site_name: ErgoDocs
site_url: https://docs.ergoplatform.com
repo_url: https://github.com/glasgowm148/ergodocs
edit_uri: edit/main/docs/
site_description: Ergo Platform Documentation

theme:
    name: material
    custom_dir: overrides
    #favicon: assets/favicon.png
    palette: # dark scheme toggle on material + dark orange
      - scheme: default
        primary: red
        toggle:
          icon: material/toggle-switch-off-outline
          name: Switch to dark mode
      - scheme: slate
        primary: red
        toggle:
          icon: material/toggle-switch
          name: Switch to light mode
    features:
        - content.action.edit
        - content.action.view
        - content.code.copy
        - navigation.tabs
        # - navigation.instant
        # - navigation.sections # The bold sections in navigation
        - navigation.tracking
        - navigation.indexes
        - content.tabs.link
        - toc.follow

      #  - toc.integrate
    logo: assets/logo.png
    font:
      text: Roboto
extra_css:
  - assets/extra.css
  - assets/neoteroi-mkdocs.css
  # - https://unpkg.com/mermaid@8.5.1/dist/mermaid.css #404 ?
extra_javascript:
  - assets/extra.js
  # - assets/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - https://unpkg.com/mermaid@8.5.1/dist/mermaid.min.js
 # - https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML



extra:
  version:
    provider: mike
  analytics:
    provider: google
    property: G-5XM6BXT041


#extra:
#  generator: false


plugins:
  - search
  #- rss
  #- git-revision-date-localized
  #- glightbox
  - render_swagger:
      allow_arbitrary_locations: true
  - neoteroi.mkdocsoad
  #- mkdocs-jupyter #https://github.com/danielfrg/mkdocs-jupyter
  - section-index #https://github.com/oprypin/mkdocs-section-index
  #- awesome-nav #https://github.com/lukasgeiter/mkdocs-awesome-pages-plugin
  - autolinks
  - tags: # https://squidfunk.github.io/mkdocs-material/setup/setting-up-tags/#
  #- bibtex:
  #    bib_file: refs.bib
  #- categories
  #- exclude-search # https://github.com/chrieke/mkdocs-exclude-search
  #- semiliterate # http://studioinfinity.org/semiliterate/mkdocs_semiliterate/plugin/
  #- pagenav-generator #https://github.com/Andre601/mkdocs-pagenav-generator



markdown_extensions:
  - footnotes
  - pymdownx.details  # Adds collapsible content sections with a "details" block.
  - pymdownx.tasklist:  # Enables task lists with checkboxes.
        custom_checkbox: true  # Allows custom checkboxes for task lists.
  - codehilite  # Enables syntax highlighting for code blocks.
  - extra  # Adds extra Markdown features (e.g., tables, definition lists).
  - tables  # Enables support for tables in Markdown.
  - neoteroi.cards  # Adds card-like components for visually structured content.
  - meta  # Allows the use of metadata blocks at the top of Markdown files.
  - fenced_code  # Adds support for fenced code blocks (e.g., triple backticks).
  - toc:  # Generates a Table of Contents (TOC) for the document.
        permalink: "#"  # Adds permalinks to each TOC entry.
        baselevel: 1  # Sets the starting heading level for TOC generation.
        toc_depth: 3  # Limits TOC to include headings up to level 3.
  - admonition  # Adds support for note, warning, and other admonition blocks.
  - pymdownx.inlinehilite  # Enables inline syntax highlighting for code snippets.
  - pymdownx.superfences:  # Extends fenced code blocks with custom fences.
      custom_fences:
        - name: mermaid  # Adds support for Mermaid diagrams.
          class: mermaid  # Specifies the class to apply for Mermaid diagrams.
          format: !!python/name:pymdownx.superfences.fence_div_format  # Specifies formatting.
  - pymdownx.arithmatex:  # Adds support for LaTeX math equations.
      generic: true  # Uses a generic format for better compatibility.
  - pymdownx.tabbed:  # Enables tabbed content blocks.
      alternate_style: true  # Applies an alternate visual style for tabs.
  - pymdownx.blocks.admonition  # Adds block-level admonitions with enhanced features.
  - pymdownx.blocks.details  # Enhances collapsible "details" blocks.
  - attr_list  # Allows adding HTML attributes to Markdown elements.
  - md_in_html  # Enables using Markdown syntax inside HTML tags.
  - pymdownx.tasklist  # Re-enables task lists (optional duplicate entry).
  - pymdownx.betterem  # Enhances emphasis and strong emphasis detection.
  - pymdownx.tilde  # Adds support for strikethrough and subscript text.
  - pymdownx.highlight  # Enables advanced syntax highlighting for code blocks.
  - pymdownx.snippets  # Include external content or reusable snippets
  - pymdownx.emoji  # Adds emoji support
  - pymdownx.magiclink  # Auto-detects URLs and emails
  - pymdownx.caret  # Enables superscript syntax
  - pymdownx.mark  # Highlights text with ==
  - pymdownx.smartsymbols  # Replaces common symbols (e.g., (c) → ©)
  - pymdownx.keys  # Keyboard key representation
  - pymdownx.saneheaders  # Enforces stricter header syntax



nav:
  - Introduction:
    - Getting Started: index.md
    - Why Ergo: dev/protocol/why.md
    - Key Features:
      - dev/protocol/protocol-overview.md
      - eUTxO:
        - dev/protocol/eutxo.md
        - UTxO vs Account: dev/protocol/eutxo/accountveutxo.md
        - Atomic Swaps: dev/protocol/eutxo/atomic.md
        - Ergo vs Cardano: dev/protocol/eutxo/ergo_vs_cardano.md
        - UTXO State: dev/protocol/eutxo/utxo-state.md
      - NIPoPoWs:
        - dev/protocol/nipopows.md
        - Light Clients: dev/protocol/nipopow/nipopow_nodes.md
        - Light Miners: dev/protocol/nipopow/logspace.md
        - Sidechains: dev/protocol/nipopow/nipopow-sidechains.md
      - Privacy: dev/protocol/zkp.md
      - Storage Rent: dev/protocol/storage-rent.md
      - Autolykos: dev/protocol/autolykos-protocol.md

    - Research & Whitepapers:
      - documents.md
      - Whitepaper: doc/whitepaper.md
      - ErgoScript Whitepaper: doc/ergoscript-whitepaper.md
      - On Contractual Money: doc/on-contractual-money.md
    - Roadmap:
      - roadmap.md
      - Scaling:
        - dev/protocol/scaling.md
        - Layer 0:
          - dev/protocol/scaling/layer0.md
          - Sub Blocks:
            - uses/sidechains/subblocks.md
            - Technical Details: uses/sidechains/input-blocks.md
        - Layer 1: dev/protocol/scaling/layer1.md
        - Layer 2: dev/protocol/scaling/layer2.md
        - Discussions:
          - Roadmaps: dev/protocol/scaling/scaling-roadmap.md
          - Transactions Per Second: dev/protocol/scaling/TPS.md
          - Atomic Composability: dev/protocol/scaling/atomic-composability.md
    - Entities:
      - Ergo Foundation:
        - ef/ergo-foundation.md
        - Scope: ef/ef-scope.md
        - Treasury: ef/ef-treasury.md
        - Votes: ef/ef-votes.md
        - Future: ef/ef-future.md
      - DevDao: devdao.md
      - Sigmanauts: contribute/sigmanauts.md
    - Events:
      - Events: events/events-overview.md
      - ERGOHACK: events/ergohack.md
      - ErgoSummit: events/ergosummit.md
    - Contribute:
          - contribute.md
          - Developers:
            - contribute/devs.md
            - Technical Guidelines: contribute/technical-guidelines.md
            - Bounties: contribute/bounties.md
            - Grants: contribute/grants.md
            - Roles: contribute/roles.md
          - Marketing: contribute/marketing.md
          - Sigmanauts: contribute/sigmanauts.md
          - Contribute to the docs!: contribute/docs.md
    - Wallets: dev/wallets.md
    - Resources:
        - Social Contract: social_contract.md
        - Audit: dev/protocol/audit.md
        - The Howey Test: security.md
        - Privacy Guide: doc/privacy-guide.md
        - Glossary: glossary.md
        - FAQ: faq.md
        - Common Misconceptions: fud-faq.md
        - A CBDC For All: uses/cbdc.md




  - Ecosystem:
    - uses/use-cases-overview.md
    - Artificial Intelligence: ai.md
    - Infrastructure:
      - Rosen Bridge:
        - eco/rosen.md
        - Watchers:
          - eco/rosen/watcher.md
          - Prerequisites: eco/rosen/rosen-preq.md
          - Ergo Watcher: eco/rosen/ergo-watcher.md
          - Bitcoin Watcher: eco/rosen/bitcoin-watcher.md
        - Guards: eco/rosen/rosen-guard.md
        - Tokenomics: eco/rosen/rosen-tokenomics.md
        - Team: eco/rosen/rosen-team.md
        - Uses:
          - eco/rosen/rosen-uses.md
          - rsERG-LP: tutorials/rsERGLP.md
          - Token Integration Guides: tutorials/token_integration.md
      - Oracles:
        - uses/oracles.md
        - Oracle Pools V2: eco/oracles-v2.md
        - Mixicles: uses/mixicles.md
      - Sidechains:
        - uses/sidechains.md
        - Sub Blocks: uses/sidechains/subblocks.md
        - Sigma Chains: uses/sidechains/sigma-chains.md
        - PoUW: uses/pouw.md
       # - Archived:
       #   - ErgoData: uses/ErgoData.md
        #  - SentientChain: uses/sentientchain.md


    - Financial:
      - Decentralized Exchanges:
        - uses/dex.md
        - Spectrum Finance: eco/spectrum.md
        - Trade House: eco/ergo-auctions.md
        - Palmyra: eco/palmyra.md
        - Crystal Pool: eco/crystal-pool.md
        - Machina Finance: eco/machina-finance.md
        - Mew Finance: eco/mew-finance.md
        - P2P:
          - eco/p2p-trading.md
          - Token Jay: eco/token-jay.md
          - Analog Ergo: eco/analog-ergo.md
          - Single Tx Swap: eco/single-tx-swap.md


      - Monetary Systems:
        - SigmaUSD: uses/sigmausd.md
          # - Examples: uses/sigmausd/examples.md
          # - Mining Incentives: uses/sigmausd/mining-incentives.md
          # - Other Stablecoins: uses/sigmausd/comparison.md
          # - Why?: uses/sigmausd/why-sigusd.md
        - ChainCash: uses/chaincash.md
        - Gluon: eco/gluon.md
        - DexyGold: eco/dexy.md
        - Local Exchange Trading Systems:
          - uses/lets.md
          - Basic Implementation: uses/lets/basic-imp.md
          - Trustless LETS: uses/lets/trustless-lets.md

       # - uses/stablecoins.md

      - Decentralized Finance:
        - Lending:
          - uses/lending.md
          - duckpools: eco/duckpools.md
          - EXLE: eco/exle.md
          - SigmaFi: eco/sigmafi.md
        - Derivatives and Synthetics:
          - uses/deriv.md
          - Hodlbox: eco/hodlbox.md
          - HodlCoin: eco/hodlcoin.md
          - AuctionCoin: eco/auction-coin.md
          - OptionCoin: eco/optioncoin.md
          - OptionPools: eco/optionPools.md
          - SigmaO: eco/sigmao.md

          # - Tensile: eco/tensile.md
        - Crowdfunding:
          - uses/crowdfunding.md
          - ErgoRaffle: eco/ergoraffle.md
          - Sigma Subscriptions: eco/sigma-subscriptions.md
         # - ErgoWell: eco/ergowell.md
        #  - ErgoFund: uses/ergofund.md
      - Degenerate Finance:
        - uses/degfi.md
        - Hodlcoin: eco/hodlcoin.md
        - Auction Coin: eco/auction-coin.md
        - Grand Gambit: eco/grand-gambit.md
        - Hodlbox: eco/hodlbox.md
        - OptionCoin: eco/optioncoin.md
      #  - NightOwl Casino: eco/nightowl.md
        - Obolflip: eco/obolflip.md
        - Lotteries: uses/lottery.md
        - The Field: eco/the-field.md

    - NFTs:
      - uses/nft.md
      - ErgoAuctionHouse: eco/ergo-auctions.md
      - SkyHarbor: eco/skyharbor.md
      - Lilium: eco/lilium.md
    # - SigmaStamp: eco/sigma-stamp.md
    - Gaming:
      - uses/gaming.md
      - BlitzTCG: eco/blitz.md
      # - Metaverse:
      #  - uses/metaverse.md
      - Cyberverse: eco/cyberverse.md
     #   - Sigmavalley: eco/sigmavalley.md
    #  - BlobsTopia: eco/blobstopia.md
     # - ErgoGames.io:
    #    - Digigoats: eco/digigoats.md
     #   - Monster Pub Brawl: eco/monsterpub.md
     #   - Project Tesseract: eco/project-tesseract.md

    - Tooling:
      - Crux Finance: eco/crux.md
      # - Azorus: eco/azorus.md
      - ErgoNames: eco/ergonames.md
      - Celaut: 
        - eco/celaut.md
        - Reputation System: eco/reputation-system.md
      - NetNotes: eco/netnotes.md
      - SigmaRand: eco/sigmarand.md
      - Moria Finance: eco/moria-finance.md
      - Trading:
        - Arbit: uses/arbit.md
        - Grid Trading:
          - uses/grid_trading.md
          - Off the Grid:
            - uses/off_the_grid.md
            - Tutorial: uses/off_the_grid_tut.md
    - Applications:
        - Thz.FM: eco/thz-fm.md
        - TabbyPOS: eco/tabbypos.md
        - PandaV: eco/pandav.md
        - ZenGate Global:
          - eco/zengate.md
          - Solaris Portal: eco/solaris.md
          - Cyberiad: eco/cyberaid.md
    - Privacy:
      - Mixing:
        - uses/mixer.md
        - ErgoMixer:
          - eco/ergomixer.md
          - Identifiability: eco/ergomixer/identifiability.md
          - Best Practices: eco/ergomixer/best-practices.md
          - FAQ: eco/ergomixer/mixer-faq.md
          - Token: eco/ergomixer/token.md
          - Install on Android: eco/ergomixer/mixer-android.md
        - SigmaJoin: eco/sigmajoin.md
      - Stealth Addresses: uses/stealth-address.md
      # - ZK Treasury: uses/zkt.md
      # - Decentralised Anon ID:
      #  - Ergo Nation: eco/ergonation.md


    - DAOs:
      - uses/dao.md
      - Paideia: eco/paideia.md
      - ErgoPad: eco/ergopad.md
      - The Field: eco/the-field.md
      - Thz.FM: eco/thz-fm.md

    - Miners:
      - eco/miner-tooling.md
      - Lithos: eco/lithos.md
      - GuapSwap: eco/guapswap.md
      - CYTI: eco/cyti.md


    - Further Ideas:
      - Profit Sharing: uses/profit.md
      - Email Client for Blocked Internet: uses/blocked_web.md
      - Flash Loans: uses/flash-loans.md
      - Prediction Markets: uses/prediction_markets.md
      - Insurance: uses/insurance.md
      - Micro Credit: dev/scs/microcredit.md
      - Mutual Credit: uses/mutual_credit.md
      - Bonding Curve: uses/bonding.md
      - Tokens:
        - ICOs: uses/ergo-ico.md
        - Index Coins: uses/index_coins.md
        - PoW Tokens: uses/PoW_tokens.md
        - Perpetual Tokens: dev/tokens/perpetual.md
        - Buy Back Guarantees: uses/dex-buyback.md


    - Standards:
      - contribute/standards.md
      - Chat Bridge: contribute/standards/chat-bridge.md
      - ErgoTipperBot: contribute/standards/tipbot.md
      - KYA: contribute/standards/kya.md
      - Community Guidelines: contribute/standards/guidelines.md
      - Moderation Guide: contribute/standards/moderation.md # ADDED
      - Analytics: contribute/standards/analytics.md



      # - Context Claims: uses/context-claims.md
    #  - Asset Tokenisation: uses/tokenisation.md
      # - Privacy: uses/privacy.md
    #  - Collateral Mining: uses/collateral-mining.md
    #  - Math Fun: uses/math_fun.md
    #  - CDBC: uses/cbdc.md
    # - Atomic Swaps: dev/protocol/atomic.md

  - Developers:
    - dev/get-started.md
    - Developer Resources: dev/start/resources.md
    - Students: students/index.md
    - Bounties!: contribute/bounties.md
    - Tutorials:
      - Overview: dev/tutorials.md
      - Fleet SDK Recipes: dev/tutorials/fleet-sdk-recipes.md
      - Blockchain Indexing: # UPDATED
        - Overview: dev/tutorials/blockchain-indexing.md
        - Explorer APIs: dev/tutorials/blockchain-indexing/explorer-apis.md
        - Node API Direct: dev/tutorials/blockchain-indexing/node-api-direct.md
        - Custom Indexer: dev/tutorials/blockchain-indexing/custom-indexer.md
      - Hardware Wallet Integration: dev/tutorials/hardware-wallet-integration.md
      # - MAST Example: dev/scs/tutorials/mast-example.md # MOVED
      # - FSM Example: dev/scs/tutorials/fsm-example.md # MOVED
    - Data Model:
      - dev/data-model/data-model.md
      - Box:
        - dev/data-model/box.md
        - Registers: dev/data-model/box/registers.md
        - Lifecycle: dev/data-model/box/lifecycle.md
        - Assets:
          - Tokens:
            - dev/data-model/box/tokens.md
            - Creating a perpetual token: dev/tokens/perpetual.md
            - Burning a token: dev/tokens/burn.md
          - Non-Fungible Tokens:
            - NFTs: dev/tokens/nfts/nfts-overview.md
            - Minting a NFT:
              - dev/tokens/nfts/create.md
              - V1 v V2: dev/tokens/nfts/v1v2.md
              - Simple Example: dev/tokens/nfts/nft-examples.md
              - On-chain NFTs: dev/tokens/nfts/on-chain.md
            - Royalties: dev/tokens/nfts/royalties.md
          - Singletons: dev/tokens/singletons.md
          - Standards:
            - Asset Standard: dev/tokens/standards/eip4.md
            - Geniune Token Verification: dev/tokens/standards/eip21.md
            - Auction Contract: dev/tokens/standards/eip22.md
            - Artwork Contract: dev/tokens/standards/eip24.md
        - Modelling: dev/data-model/box/box_modeling.md
      - Addresses:
        - dev/wallet/address.md
        - Types: dev/wallet/address/address_types.md
        - Validation: dev/wallet/address/address_validation.md
        # - Encoding: assets/py/Ergo_Address_Encoding.ipynb
      - Transactions:
        - dev/protocol/transactions.md
        - Composing Transactions:
          - dev/protocol/tx/composing.md
          - Sending A Chained Transaction: dev/anatomy/transactions/chained.md
          - Interacting with an Ergo Wallet:
            - Format: dev/protocol/tx/format.md
            - Merkle Tree: dev/protocol/tx/tx-merkle.md
            - Signing: dev/protocol/tx/signing.md
            - Signing Backend: tutorials/sign-tx.md
            - Validation: dev/protocol/tx/validation.md
            - Data Inputs: dev/protocol/tx/read-only-inputs.md
            - Fees: dev/protocol/tx/min-fee.md
            - Unified Transactions: dev/protocol/tx/unified.md
        - Babel Fees:
          - dev/protocol/tx/babel-fees.md
          - Babel Fees Plugin: dev/protocol/tx/babel-fleet.md
          - How To: dev/protocol/tx/babel-howto.md
          - Implementation: dev/protocol/tx/babel-impl.md
        - Resources:
          - ErgoTool: dev/stack/ergotool.md
          - Model Transaction: dev/protocol/tx/model-tx.md
          - Payments: dev/anatomy/transactions/payments.md
          - Standards:
            - dev/protocol/tx/standards.md #ToDo
            - Babel Fees: dev/protocol/tx/babel-fees.md
            - Proxy Contracts: dev/wallet/payments/standards/eip17.md
            - ErgoPay Protocol: dev/wallet/payments/standards/eip20.md
            - Payment Request URI: dev/wallet/payments/standards/eip25.md
            - Just-In-Time Costing: node/jitc.md


      - Block:
        - dev/data-model/block.md
        - Header: dev/data-model/block-header.md
        - Transactions: dev/data-model/block-transactions.md
        - ADProofs: dev/data-model/block-adproofs.md
        - Extension Section: dev/data-model/extension-section.md
      - Discrete Logarithm: dev/data-model/dlog.md # ADDED

      # - UTXO-State:
    - Infrastructure:
      - dev/interact.md
      - Node:
        - node/install.md
        - Setup:
          - Manual: node/install/manual.md # UPDATED
          - Build from Source: node/install/build-from-source.md # NEW
          - SNAPSHOT Dependencies: node/install/snapshot-dependencies.md # NEW
          - Troubleshooting: node/install/troubleshooting.md
          - FAQ: node/install/node-faq.md
          - Pi: node/install/pi.md
          - Android: # UPDATED
            - Overview: node/install/node-android.md
            - Termux (Digest): node/install/node-android/termux-digest.md
            - Proot (RocksDB): node/install/node-android/proot-rocksdb.md
          - Docker: node/install/docker.md
        - Testnet:
          - node/testnet.md
          - Full Sync: node/testnet/testnet-full.md
          - CPU Mining: node/testnet/cpu-mining.md
          - Fork your own chain: node/testnet/mine-your-own-chain.md
          - Resources: node/testnet/testnet-resources.md
        # - Architecture: node/architecture.md



        - Protocol:
          - node/protocol.md
          - P2P:
            - dev/p2p/p2p-protocol-overview.md
            - Handshaking: dev/p2p/p2p-handshake.md
            - Network Messages: dev/p2p/network.md
            - Peer Management: node/peer-management.md
            - BlockP2P: dev/p2p/BlockP2P.md
            - Modifiers:
              - node/modifiers.md
              - Modifiers Exchange: dev/p2p/modifiers-exchange.md
              - Modifiers Processing: node/modifiers-processing.md
              - Modifiers Validation: node/modifiers-validation.md
              - Synchronisation: node/synchronisation.md
          - EIPs: dev/protocol/eip.md

        - Configuration:
          - Node Wallet:
            - node/wallet.md
            - Hierarchical keys: dev/wallet/keys.md
            - Wallet Setup: node/wallet-setup.md
          - Swagger API:
            - node/swagger.md
            - OpenAPI Spec: node/swagger/openapi.md
            - Try it out!: node/swagger/swagger_api.md
            - Indexed Node API: node/indexed-node.md
          - Configuration Files:
            - application.conf:
              - node/conf.md
              - ergo:
                - node: node/conf/conf-node.md
                - cache: node/conf/conf-cache.md
                - chain: node/conf/conf-chain.md
                - wallet: node/conf/conf-wallet.md
                - voting: node/conf/conf-voting.md
              - bounded-mailbox: node/conf/conf-bounded.md
              - akka: node/conf/conf-akka.md
              - scorex: node/conf/conf-scorex.md
              - critical-dispatcher: node/conf/conf-crit.md
              - api-dispatcher: node/conf/conf-api.md
            - testnet.conf:
              - node/testnet/testnetconf.md
              - devnet.conf: node/testnet/devnetconf.md
          - Tor: node/tor.md
        - Modes of Operation:
            - node/modes.md
            - Archival Full Node:
              - node/modes/archival-node.md
              - Technical Details: node/modes/archive-node-workflow.md
            - Pruned Full Node:
              - node/modes/pruned-full-node.md
              - Technical Details: node/modes/pruned/pruned-impl.md
            - Light Full Node:
              - node/modes/light-full-node.md
              - Digest State: node/digest-state.md
              - blocksToKeep: node/history-pruning.md
              - Technical Details: node/modes/light-techworkflow.md
            - Light SPV:
              - node/modes/light-spv-node.md
              - Simplified Payment Verification: node/modes/spv.md
              - Technical Details: node/modes/light-spv-mode-workflow.md
      - Explorer:
        - dev/stack/explorer.md
        - Local Setup: dev/stack/explorer/explorer_local.md
        - Pi Blockchain Explorer: dev/stack/rpi-blockchain-explorer.md
        - GraphQL: dev/stack/explorer/graphql.md
      - APIs:
        - dev/stack/api.md
        - API How-To: dev/stack/api-howto.md
      - Off-Chain:
        - Overview: dev/oc/off-chain-overview.md
        - Oracle-Core:
          - dev/oc/oracle.md
          - Bootstrap an Oracle Pool: tutorials/oracle-bootstrap.md
        - Off-Chain Bots: dev/oc/dex_bots.md
        - Rust Utilities: dev/oc/ergo_utilities.md
        - Plasma: dev/lib/plasma.md
      - Wallets:
        - dev/wallets.md
        - Types:
          - Satergo: dev/wallet/satergo.md
          - Nautilus: dev/wallet/nautilus.md
          - Minotaur:
            - dev/wallet/minotaur.md
            - Multi-Sig: dev/wallet/minotaur-multisig.md
          - SAFEW: dev/wallet/safew.md
          - Ledger: dev/wallet/payments/ledger.md
          - Paper Wallet: dev/wallet/paper-wallet.md
          - Satergo Vault: dev/wallet/satergo-vault.md
        - Resources:
          - Access Issues: tutorials/access-issues.md
          - MultiSig: dev/wallet/multisig.md
          - Standards:
            - UTXO-Set Scanning Wallet API: dev/wallet/standards/eip1.md
            - Deterministic Wallet Standard: dev/wallet/standards/eip3.md
            - Cold Wallet: dev/wallet/standards/eip19.md
            - EIP Standards Overview: dev/wallet/eip-standards.md
            - EIP-0005: dev/wallet/standards/eip5.md
      - Integration Guide: dev/Integration/guide.md

    - Tooling:
      - Pathways:
        - Development Stack:
          - dev/start.md
          - Introduction: dev/stack/introduction.md
          - Starter Tutorial: dev/stack/basics.md
          - Server: dev/stack/server.md
          - Browser: dev/stack/browser.md
          - Desktop: dev/stack/desktop.md
          - Mobile:
            - dev/stack/mobile.md
            - iOS: dev/stack/iOS.md
            - Android: dev/stack/android.md
            - Build Constraints: dev/stack/mobile-build-constraints.md
          - Bundled dApps: dev/stack/bundled.md
        - Programming Languages:
          - JVM:
            - dev/lang/jvm.md
            - Scala: dev/lang/scala.md
            - Java: dev/lang/java.md
            - Kotlin: dev/lang/kotlin.md
          - JavaScript: dev/lang/js.md
          - Rust: dev/lang/rust.md
          - Others:
            - Python: dev/lang/python.md
            - C#: dev/lang/csharp.md
            - Go: dev/lang/go.md
      - Frameworks:
        - dev/stack/frameworks.md
        - AppKit:
          - dev/stack/appkit.md
          - Tutorial: dev/stack/appkit/tutorial.md
          - Interacting with a local Node: dev/stack/appkit/appkit-node.md
          - Gradle: dev/stack/appkit/gradle.md
          - Using Appkit from Python: dev/stack/appkit/appkit_py.md
        - SigmaRust:
          - dev/stack/sigma-rust.md
          - Constrained Environments: dev/stack/sigma-rust-constrained.md
        - Fleet (JS): dev/stack/fleet.md
        - FleetSharp: dev/stack/fleetsharp.md
        - Others:
          - Ergpy: dev/stack/ergpy.md
          - RustKit: dev/stack/rustkit.md
          - Mosaik:
            - dev/stack/mosaik/intro.md
            - Tutorial:
              - A simple UI: dev/stack/mosaik/tutorial2.md
              - Processing data: dev/stack/mosaik/tutorial3.md
              - ErgoPay: dev/stack/mosaik/tutorial4.md
              - Web UI: dev/stack/mosaik/tutorial5.md
              - Deployment: dev/stack/mosaik/mosaik-docker-flux.md
              - Example apps: dev/stack/mosaik/examples.md
            - Mosaik (Old): dev/stack/mosaik.md # ADDED
          - JSON dApp Environment: dev/stack/jde.md
          - Headless dApp Framework:
            - dev/stack/headless.md
            - Modules: dev/stack/headless/modules.md

      - Payments:
            - ErgoPay:
              - ErgoPay: dev/wallet/payments/ergopay/ergo-pay.md
              - Tutorial: dev/wallet/payments/ergopay/ep-tutorial.md
            - ErgoAuth: dev/wallet/payments/ergoauth.md
            - dApp Connector: dev/wallet/payments/dApp.md
            - Proxy Contracts:
              - dev/wallet/payments/proxy.md
              - Assembler: dev/stack/assembler.md


      - Libaries:
        - dev/libraries.md
        - Plasma: dev/lib/plasma.md
        - Scrypto: dev/lib/scrypto.md
        - EIP12-Types: dev/lib/eip12-types.md
        - SigmaJS: dev/lib/sigmajs.md
        - DeCo: dev/deco.md

      # - Bookmarks: dev/start/resources.md
    - ErgoScript:
        - dev/scs/ergoscript.md

        - Sigma Language:
          - dev/scs/sigma-lang.md
          - Core Concepts: dev/scs/ergoscript/ergoscript-key-concepts.md
          - Simple Syntax: dev/scs/syntax.md
          - Language Description: dev/scs/sigma/lang-spec.md
          - Sigma Propositions: dev/scs/sigma/sigma-prop.md
          - SigmaBoolean: dev/scs/types/sigmaboolean.md
          - The Blockchain context: dev/scs/blockchain-context.md
          - Accessing boxes and registers: dev/scs/boxes-and-registers.md
          - Global Functions: dev/scs/global-functions.md
          - Language Operations: dev/scs/sigma/lang-ops.md
          - Interacting with an Ergo Wallet:
              # - dev/anatomy/transactions/payments.md
              - Format: dev/protocol/tx/format.md
              - Merkle Tree: dev/protocol/tx/tx-merkle.md
              - Signing: dev/protocol/tx/signing.md
              - Signing Backend: tutorials/sign-tx.md
              - Validation: dev/protocol/tx/validation.md
              - Data Inputs: dev/protocol/tx/read-only-inputs.md
              - Fees: dev/protocol/tx/min-fee.md
              - Unified Transactions: dev/protocol/tx/unified.md
          - Examples:
            - Public Contracts: dev/scs/contracts.md
            - Anyone Can Spend: dev/scs/ergoscript/anyone-can-spend.md
            - No-one-Can Spend: dev/scs/ergoscript/no-one-can-spend.md
            - Context Variables: dev/scs/ergoscript/context-variables.md
            - Code-blocks: dev/scs/ergoscript/code-blocks.md
            - Public-keys: dev/scs/ergoscript/public-keys.md
            - Functional Programming: dev/scs/ergoscript/functional-programming.md
            - Box Structure: dev/scs/ergoscript/box-structure.md
            - Storing Data: dev/scs/ergoscript/storing-data.md
            - Creating a simple P2S app: dev/scs/p2s.md
          # - Data Inputs: uses/context-claims.md
        - Tooling:
          - dev/scs/ergoscript-tooling.md
          - Interpreters & Compilers:
            - dev/stack/interpreters.md
            - Compiler Phases: dev/scs/ergoscript/compiler-phases.md
            - sigmastate-interpreter: dev/scs/sigmastate-interpreter.md
            - sigma-rust: dev/stack/sigma-rust.md
            - ErgoScala: dev/stack/ergoscala.md
            - CLI Compiler: dev/stack/compiler.md
            - Rust vs Sigma: dev/scs/ergoscript/rustvssigma.md # ADDED
          - Playgrounds:
            # - escript
            - Scastie: dev/scs/ergoscript/scastie.md
            - P2S Playground: dev/stack/utilities/plutomonkey.md
            - Kiosk: dev/stack/kiosk.md
            - ErgoPuppet: dev/scs/puppet.md
          - Debugging: # UPDATED
            - Overview: dev/scs/debugging.md
            - Scala-Based: dev/scs/debugging/scala-debugging.md
            - On-Chain Mechanisms: dev/scs/debugging/on-chain-mechanisms.md
            - External Tools: dev/scs/debugging/external-tools.md
          - FlowCards: dev/scs/flowcards.md
        - ErgoTree:
          - dev/scs/ergotree.md
          - Introduction: dev/scs/ergotree/ergotree-intro.md
          - As a Language: dev/scs/ergotree/ergotree-lang.md
          - Typing: dev/scs/ergotree/typing.md
          - Evaluation: dev/scs/ergotree/evaluation.md
          - Serialization: dev/scs/ergotree/serialization.md
          - Predefined Types: dev/scs/ergotree/types.md
          - Predefined Functions: dev/scs/ergotree/functions.md
          - Encoding: dev/scs/ergotree/encoding.md
          - Script Validation: dev/scs/ergotree/script-validation.md
          - Script Optimisation: dev/scs/ergotree/script-optimisation.md
          - Templates: dev/scs/ergotree/ergotree-templates.md
          - ErgoScript vs ErgoTree: dev/scs/ergoscriptvergotree.md
        - Features:
         # - Paradigm: dev/scs/index.md
          - Data Inputs: dev/protocol/tx/read-only-inputs.md
          - Multi-Stage Protocols:
            - dev/scs/multi.md
            - Transaction Chains: dev/scs/tx/tx-chains.md
            - Transaction Trees: dev/scs/tx/tx-tree.md
            - Transaction Graphs: dev/scs/tx/tx-graphs.md
            - Context Enrichment: dev/scs/tx/context-enrichment.md
            - Multi-Stage Transactions: dev/protocol/tx/multi-stage-txs.md # ADDED
            - Examples:
              - Reversible Address: dev/scs/tx/reversible-address.md
              - Rock/Paper/Scissors: dev/scs/tx/rock-paper-scissor.md
              - ICO: dev/scs/tx/ico.md
              - MAST Example: dev/scs/tx/mast-example.md # NEW LOCATION
              - FSM Example: dev/scs/tx/fsm-example.md # NEW LOCATION
        - Resources:
          - FAQ: dev/scs/ergoscript/ergoscript-faq.md # ADDED
          - Reusable Functions: dev/scs/ergoscript/reusable-functions.md # ADDED

    - Cryptographic:
      - crypto.md
      - Signature Schemes:
        - Sigma Protocols:
          - dev/scs/sigma.md
          - Schnorr:
            - dev/scs/sigma/schnorr.md
            - Verifying Schnorr Signatures: dev/scs/sigma/verifying.md
          - Diffie:
            - dev/scs/sigma/diffie.md
          - Other Signatures:
            - Ring Signatures: dev/data-model/ring.md
            - Threshold Signatures:
              - dev/data-model/threshold.md
              - 3-out-of-5 Threshold Signature: dev/scs/sigma/3-out-of-5.md
            - Distributed Signatures: node/sigs.md
            - Signature Scheme Internals: sig-scheme.md
            - Improved Signatures: dev/scs/sigma/improved-signatures.md # ADDED
      - Zero-Knowledge Proofs:
        - Non-Interactive ZK: dev/data-model/nizk.md
        - ZeroJoin: dev/crypto/zerojoin.md

      - Data Structures:
        - dev/data-model/data-structures.md
        - Merkle Tree:
          - dev/data-model/structures/merkle/merkle-tree.md
          - Format: dev/data-model/structures/merkle/merkle-format.md
          - Validation: dev/data-model/structures/merkle/merkle-validation.md
          - Considerations: dev/data-model/structures/merkle/merkle-considerations.md # ADDED
          - Implementations:
            - Extension Block Merkle: dev/data-model/structures/merkle/merkle-extension.md
            - Transaction Merkle Trees: dev/protocol/tx/tx-merkle.md
            - Merkle Batch Proofs:
              - dev/data-model/structures/merkle/merkle-batch-proof.md
              - Implementation: dev/data-model/structures/merkle/merkle-batch-impl.md
              - Testing: dev/data-model/structures/merkle/merkle-batch-testing.md
            - Lightweight Client Proofs: dev/data-model/structures/merkle/merkle-light-proof.md
        - AVL Trees:
          - dev/protocol/avl.md
          - Plasma: dev/lib/plasma.md
        - Proof of Proof-of-Work:
          - dev/data-model/structures/popow.md
          - Interlink Vectors: dev/data-model/structures/interlink-vectors.md



   # - Resources:
      # - dev/stack/introduction.md



  - Miners:
    - Autolykos:
      - mining/autolykos.md
      - Algorithm:
        - Emission:
          - mining/emission.md
          - EFYT: efyt.md
        - Difficulty Adjustment: mining/difficulty.md
        - Solution Verification: mining/solution-verification.md
        - Technical Breakdown: mining/algo-technical.md

      - Storage Rent:
        - mining/rent.md
        - Fees: mining/rent/rent-fees.md
        - Tokens: mining/rent/rent-tokens.md
        - Spending: mining/rent/rent-spending.md
        - State Growth: mining/rent/rent-paper.md
      - ASIC Resistance: mining/asic.md
      - Resources:
        - mining/mining-resources.md
        - CPU vs GPU: mining/cpu.md
        - EIPs:
          - Emission Retargeting Soft-Fork: mining/standards/eip27.md
          - Tweaking Difficulty Adjustment Algorithm: mining/standards/eip37.md
    - Mining: mining/mining-overview.md
    - Start Mining:
      - mining/setup/join.md
      - Software: mining/software.md
      - Operating Systems: mining/os.md
      - Overclocking: mining/overclocking.md
      - Pools: mining/pools.md
      - Solo Mining:
        - mining/setup/solo.md
        - Node Configuration: mining/setup/solo-node.md
        - Withdraw: mining/withdraw.md
        - FAQ:  mining/setup/solo-faq.md
      - Host a Pool:
        - mining/setup/pool.md
        - Stratum: mining/setup/stratum.md
        - MiningCore:
          - mining/setup/miningcore.md
          - Windows: mining/setup/pool_win.md

    - Governance:
      - mining/governance.md
      - Voting: mining/gov/voting.md
      - Forking:
        - mining/gov/forking.md
        - Soft Forks: mining/gov/soft-fork.md
        - Velvet Forks: mining/gov/velvet-fork.md
        - Hard Forks: mining/gov/hard-fork.md
    - Revenue: mining/revenue.md
    - Tooling:
      - GuapSwap: eco/guapswap.md
      - Lithos:
        - eco/lithos.md
        - SNISPs: eco/snisp.md
      - CYTI: eco/cyti.md
      - Log-Space Mining: mining/log_space.md
      - Smartpools:
        - mining/smartpools.md
        - Subpooling: mining/setup/subpool.md
