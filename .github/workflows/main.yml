name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir mkdocs mkdocs-bibtex
          pip install -r requirements.txt
          echo "‚úÖ Dependencies installed!"

      - name: Verify MkDocs Installation
        run: |
          echo "üîç Checking MkDocs installation..."
          python -m mkdocs --version || (echo "‚ùå MkDocs not found, reinstalling..." && pip install mkdocs)
          which mkdocs || echo "‚ùå MkDocs not in PATH!"
          python -m mkdocs --version

      - name: Build MkDocs Site & Log Details
        run: |
          echo "üöÄ Running MkDocs build..."
          python -m mkdocs build --clean
          echo "‚úÖ MkDocs build complete!"
          echo "üîç Verifying generated files..."
          ssh root@88.198.50.217 'find /var/www/html/ergodocs/site -type f -printf "üïí %TY-%Tm-%Td %TH:%TM:%TS %p\n" | sort -r | head -n 10'

      - name: Check Nginx Root Directory
        run: |
          echo "üîç Checking Nginx document root..."
          ssh root@88.198.50.217 'docker exec $(docker ps --filter "ancestor=nginx" --format "{{.ID}}") sh -c "cat /etc/nginx/nginx.conf | grep root"'

      - name: Check Nginx Container Site Path
        run: |
          echo "üîç Checking if Nginx inside Docker is using the latest site directory..."
          ssh root@88.198.50.217 'docker exec $(docker ps --filter "ancestor=nginx" --format "{{.ID}}") ls -la /usr/share/nginx/html | tail -n 10'

      - name: Force Reload Nginx Content
        run: |
          echo "üîß Forcing Nginx inside Docker to refresh content..."
          ssh root@88.198.50.217 'docker exec $(docker ps --filter "ancestor=nginx" --format "{{.ID}}") sh -c "rm -rf /usr/share/nginx/html/*"'
          ssh root@88.198.50.217 'docker exec $(docker ps --filter "ancestor=nginx" --format "{{.ID}}") sh -c "cp -r /var/www/html/ergodocs/site/* /usr/share/nginx/html/"'
          ssh root@88.198.50.217 'docker restart $(docker ps --filter "ancestor=nginx" --format "{{.ID}}")'

      - name: Check Web Server Served Files
        run: |
          echo "üîç Checking what the web server is serving..."
          curl -s -I https://docs.ergoplatform.com/mining/rent/rent-spending/ | grep "Last-Modified" || echo "‚ùå Web server is serving outdated content or request failed!"
