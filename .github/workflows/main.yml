name: Docs CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: docs-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build MkDocs site
        run: mkdocs build

      - name: Upload MkDocs artifact
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs-site
          path: site

      - name: Upload GitHub Pages artifact
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy-preview:
    name: Deploy preview to GitHub Pages
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Deploy preview
        uses: actions/deploy-pages@v4
        with:
          preview: true

  deploy-production:
    name: Deploy to production server
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Remote deploy via SSH
        run: |
          echo "üöÄ Deploying to remote server..."
          ssh root@213.239.193.208 "export GITHUB_SHA=$GITHUB_SHA; bash -s" <<'EOF'
            set -eo pipefail

            echo "üìÇ Changing to project directory..."
            cd /var/www/ergodocs || { echo "‚ùå Failed to cd to project dir"; exit 1; }

            echo "üîÑ Resetting repository to expected commit..."
            git fetch origin main || { echo "‚ùå Git fetch failed"; exit 1; }
            git reset --hard "${GITHUB_SHA}" || { echo "‚ùå Git reset failed"; exit 1; }
            git clean -fd

            echo "üß∞ Ensuring python3-venv is available..."
            apt-get update -y && apt-get install -y python3-venv

            echo "üêç Setting up virtual environment..."
            python3 -m venv .venv
            source .venv/bin/activate

            echo "üì¶ Installing dependencies..."
            pip install --upgrade pip
            pip install -r requirements.txt || { echo "‚ùå Pip install failed"; exit 1; }

            echo "üßπ Cleaning old MkDocs site..."
            rm -rf site || echo "‚ö†Ô∏è Failed to remove site dir"

            echo "üèó Building MkDocs site..."
            mkdocs build || { echo "‚ùå MkDocs build failed"; exit 1; }

            echo "ü™™ Writing deploy metadata..."
            echo "${GITHUB_SHA}" > site/deploy-sha.txt
            date -u +"%Y-%m-%dT%H:%M:%SZ" > site/deploy-timestamp.txt
          EOF

      - name: Verify remote site files
        run: |
          echo "üîç Checking recently updated files..."
          ssh root@213.239.193.208 'find /var/www/ergodocs/site -type f -printf "üïí %TY-%Tm-%Td %TH:%TM:%TS %p\n" | sort -r | head -n 10'

      - name: Check web server served files
        run: |
          echo "üîç Verifying web server output..."
          DEPLOYED_SHA=$(curl -fsS https://docs.ergoplatform.com/deploy-sha.txt || true)
          if [ -z "$DEPLOYED_SHA" ]; then
            echo "‚ùå Unable to read deployed SHA from web server"
            exit 1
          fi
          echo "üåê Remote site reports commit: $DEPLOYED_SHA"
          if [ "$DEPLOYED_SHA" != "$GITHUB_SHA" ]; then
            echo "‚ùå Remote site commit does not match expected $GITHUB_SHA"
            exit 1
          fi
          echo "‚úÖ Remote site matches expected commit"
