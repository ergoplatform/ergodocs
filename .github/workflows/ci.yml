name: Deploy and verify live site

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SSH_USER: root
  SSH_HOST: 213.239.193.208
  DOMAIN: docs.ergoplatform.com
  PROJECT_DIR: /var/www/ergodocs
  JUPYTER_PLATFORM_DIRS: 1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Remote Deploy via SSH (delete site_live then promote new build)
        run: |
          set -Eeuo pipefail
          ssh "$SSH_USER@$SSH_HOST" bash -s -- "$PROJECT_DIR" <<'REMOTE'
          set -Eeuo pipefail
          PROJ="$1"

          echo "📂 cd \$PROJ"
          cd "$PROJ"

          echo "🔄 Git pull"
          git stash -u || true
          git pull --rebase || git pull

          echo "🐍 venv & deps"
          python3 -m venv .venv
          . .venv/bin/activate
          python -m pip install -U pip
          pip install -r requirements.txt

          echo "🏗 mkdocs build"
          rm -rf site
          mkdocs build

          echo "🧹 remove old live dir"
          if [ -d site_live ] || [ -L site_live ]; then
            rm -rf site_live
          fi

          echo "🚀 promote new build"
          mv site site_live

          # make sure nginx can read it; no failure if user/group absent
          chown -R www-data:www-data site_live || true
          find site_live -type d -exec chmod 755 {} \; || true
          find site_live -type f -exec chmod 644 {} \; || true

          echo "✅ done"
          


      - name: List latest deployed files
        run: |
          ssh "$SSH_USER@$SSH_HOST" "find '$PROJECT_DIR/site_live' -type f -printf '🕒 %TY-%Tm-%Td %TH:%TM:%TS %p\n' | sort -r | head -n 15 || true"

      - name: Light Cloudflare probe (non-fatal)
        continue-on-error: true
        run: |
          curl -fsS -H "Cache-Control: no-cache" "https://${DOMAIN}/" | head -n 1 || true

      - name: Tail Nginx logs (debug aid)
        if: always()
        run: |
          ssh "$SSH_USER@$SSH_HOST" '
            echo -e "\n--- /var/log/nginx/error.log (tail -n 100) ---"
            tail -n 100 /var/log/nginx/error.log || true
            echo -e "\n--- /var/log/nginx/access.log (tail -n 60) ---"
            tail -n 60 /var/log/nginx/access.log || true
          '
