name: Deploy and verify live site

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SSH_USER: root
  SSH_HOST: 213.239.193.208
  DOMAIN: docs.ergoplatform.com
  PROJECT_DIR: /var/www/ergodocs
  JUPYTER_PLATFORM_DIRS: 1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Build & Deploy (no sed, no edits)
        run: |
          set -Eeuo pipefail
          ssh "$SSH_USER@$SSH_HOST" '
            set -Eeuo pipefail

            TS=$(date +%Y%m%d-%H%M%S)
            PROJ="${PROJECT_DIR:-/var/www/ergodocs}"
            DOM="${DOMAIN:-docs.ergoplatform.com}"

            echo "üìÇ cd $PROJ"
            cd "$PROJ"

            echo "üêç venv + deps"
            apt-get update -y
            apt-get install -y python3-venv python3-pip
            python3 -m venv .venv
            . .venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt

            echo "üèó mkdocs build (non-strict)"
            rm -rf site
            mkdocs build

            echo "üîÅ atomic swap -> site_live"
            rm -rf site_next
            cp -a site site_next
            mv -T site_next site_live
            chown -R caddy:caddy site_live || true
            touch site_live/.deployed-at

            echo "üö¶ Nginx: disable conflicting vhosts (no edits, just move symlinks)"
            mkdir -p /etc/nginx/sites-disabled

            # 1) If the distro "default" site has your domain inside it, move it out
            if [ -e /etc/nginx/sites-enabled/default ] && \
               grep -qE "server_name[[:space:]]+${DOM};" /etc/nginx/sites-enabled/default; then
              mv /etc/nginx/sites-enabled/default "/etc/nginx/sites-disabled/default.${TS}"
              echo "‚û°Ô∏è  moved: default -> sites-disabled/default.${TS}"
            fi

            # 2) Move ANY other enabled files that declare your domain, except your intended file
            for f in /etc/nginx/sites-enabled/*; do
              [ -e "$f" ] || continue
              base="$(basename "$f")"
              # keep the canonical one (adjust name here if yours differs)
              if [ "$base" = "ergo-docs.conf" ]; then
                continue
              fi
              if grep -qE "server_name[[:space:]]+${DOM};" "$f"; then
                mv "$f" "/etc/nginx/sites-disabled/${base}.${TS}"
                echo "‚û°Ô∏è  moved: $base -> sites-disabled/${base}.${TS}"
              fi
            done

            echo "üß™ nginx -t && reload"
            nginx -t
            systemctl reload nginx

            echo "üßæ active server blocks for ${DOM}"
            nginx -T 2>/dev/null | awk "/server_name ${DOM}/,/\}/"

            echo "üß™ origin check via SNI to 127.0.0.1"
            # Use -k since Cloudflare origin cert isn‚Äôt public CA
            curl -fsS -k --resolve "${DOM}:443:127.0.0.1" "https://${DOM}/" >/tmp/home.html
            grep -q "</html>" /tmp/home.html || { echo "‚ùå origin HTML incomplete"; exit 1; }

            echo "‚úÖ origin OK"
          '

      - name: List latest deployed files
        run: |
          ssh "$SSH_USER@$SSH_HOST" "find '$PROJECT_DIR/site_live' -type f -printf 'üïí %TY-%Tm-%Td %TH:%TM:%TS %p\n' | sort -r | head -n 15 || true"

      - name: Light Cloudflare probe (non-fatal)
        continue-on-error: true
        run: |
          curl -fsS -H "Cache-Control: no-cache" "https://${DOMAIN}/" | head -n 1 || true

      - name: Tail Nginx logs (debug aid)
        if: always()
        run: |
          ssh "$SSH_USER@$SSH_HOST" '
            echo -e "\n--- /var/log/nginx/error.log (tail -n 80) ---"
            tail -n 80 /var/log/nginx/error.log || true
            echo -e "\n--- /var/log/nginx/access.log (tail -n 40) ---"
            tail -n 40 /var/log/nginx/access.log || true
          '
